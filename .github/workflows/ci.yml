name: Build Auritia

on: [push, pull_request]

jobs:
  build-linux:
    name: "🐧 Compile for Linux"
    runs-on: ubuntu-latest
    steps: 

    - name: 🧪 Environment Info
      run: "npx envinfo"

    - name: 🛎 Checkout
      uses: actions/checkout@v2

    - name: ⚡ Install Tauri
      run: sudo apt install -y --no-install-recommends libwebkit2gtk-4.0-dev build-essential curl wget sudo libssl-dev libgtk-3-dev patchelf librsvg2-dev curl jq build-essential libssl-dev libffi-dev python3 python3-venv python3-dev python3-pip
    
    - name: ⚡ Install ALSA
      run: sudo apt install -y alsa-utils libasound2-dev
    
    - name: ⚡ Install FUSE
      run: sudo apt install -y libfuse-dev
    
    - name: ⚡ Install NPM Dependancies
      run: "npm i"

    - name: ⚡ Set Version Variable
      id: version
      run: >
        echo "::set-output name=value::$(node --eval "console.log(require('./package.json').version)")"

    - name: 🛠 Build 
      run: npm run compile
      
    - name: 🗳 Upload bundle Debian artifact
      uses: actions/upload-artifact@v1
      with:
        name: Auritia_v{{ steps.version.outputs.value }}_linux.deb
        path: src-tauri/target/release/bundle/deb/auritia_${{ steps.version.outputs.value }}_amd64.deb
    
    - name: 🗳 Upload bundle AppImage artifact
      uses: actions/upload-artifact@v1
      with:
        name: Auritia_v{{ steps.version.outputs.value }}_linux.AppImage
        path: src-tauri/target/release/bundle/appimage/auritia_${{ steps.version.outputs.value }}_amd64.AppImage

  build-windows:
    name: "🌬 Compile for Windows"
    runs-on: windows-latest
    steps: 

    - name: 🧪 Environment Info
      run: "npx envinfo"

    - name: 🛎 Checkout
      uses: actions/checkout@v2

    - name: ⚡ Install NPM Dependancies
      run: "npm i"

    - name: ⚡ Set Version Variable
      id: version
      run: >
        echo "::set-output name=value::$(node --eval "console.log(require('./package.json').version)")"

    - name: 🛠 Build 
      run: npm run compile

    - name: 🗳 Upload bundle artifact
      uses: actions/upload-artifact@v1
      with:
        name: Auritia_v{{ steps.version.outputs.value }}_win.msi
        path: src-tauri/target/release/bundle/msi/Auritia_${{ steps.version.outputs.value }}_x64.msi